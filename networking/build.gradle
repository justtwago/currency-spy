apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion buildConfig.targetSdkVersion

    defaultConfig {
        minSdkVersion buildConfig.minSdkVersion
        targetSdkVersion buildConfig.targetSdkVersion

        buildConfigField "String", "BASE_URL", "\"http://data.fixer.io/api/\""
        buildConfigField "String", "API_KEY", "\"aaa7ddb038325c9f8cc6d9f3dd219836\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs = [
            '-Xuse-experimental=kotlin.contracts.ExperimentalContracts',
            '-Xopt-in=kotlin.RequiresOptIn',
            '-Xuse-experimental=kotlin.time.ExperimentalTime',
            '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
            '-Xopt-in=kotlinx.coroutines.FlowPreview',
            '-Xinline-classes',
            "-Xallow-result-return-type"
        ]
    }
}

dependencies {
    implementation project(':domain')

    coreLibraryDesugaring deps.desugaring
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.coroutines.core

    api deps.retrofit
    api deps.retrofitMoshi
    api deps.moshi
    api deps.okHttpIntereptor
    kapt deps.moshiKotlinCodegen

    implementation deps.hilt.android.lib
    kapt deps.hilt.android.compiler

    testImplementation deps.kotlin.coroutines.test
    testImplementation deps.junit
    testImplementation deps.kotlinTestAssertions
    testImplementation deps.mockk
}